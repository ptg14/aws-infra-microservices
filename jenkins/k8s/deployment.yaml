apiVersion: apps/v1
kind: Deployment
metadata:
  name: microservices-app
  labels:
    app: microservices-app
    version: v1
spec:
  replicas: 2
  selector:
    matchLabels:
      app: microservices-app
  template:
    metadata:
      labels:
        app: microservices-app
        version: v1
    spec:
      containers:
      - name: microservices-app
        image: microservices-app:IMAGE_TAG
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
          name: http
        env:
        - name: SPRING_PROFILES_ACTIVE
          value: "kubernetes"
        - name: SERVER_PORT
          value: "8080"
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /actuator/health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            path: /actuator/health/readiness
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
---
apiVersion: v1
kind: Service
metadata:
  name: microservices-app-service
  labels:
    app: microservices-app
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 8080
    protocol: TCP
    name: http
  selector:
    app: microservices-app
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: microservices-app-ingress
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  rules:
  - host: microservices-app.local
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: microservices-app-service
            port:
              number: 80